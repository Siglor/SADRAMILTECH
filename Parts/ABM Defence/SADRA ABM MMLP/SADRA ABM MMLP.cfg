PART
{
	// Kerbal Space Program - Part Config

	// --- general parameters ---
	name = sadraABMMMLP
	module = Part
	author = Siglor

	// --- asset parameters ---
	mesh = model.mu
	rescaleFactor = 1.15


	// --- node definitions ---
	node_attach = 0.0, -1.592427, -1.046865, 0, -1, 0, 0
	node_stack_bottom = 0.0, -1.592427, -1.046865, 0, -1, 0, 1

	node_stack_missile1 = 0.8587526, 0.7144908, -2.094282, 0, 0, 1, 0
	node_stack_missile4 = 0.8587526, -0.3667703, -2.094282, 0, 0, 1, 0
	node_stack_missile6 = 0.8587526, 1.154978, -2.094282, 0, 0, 1, 0
	node_stack_missile16 = 0.8587526, 0.07371697, -2.094282, 0, 0, 1, 0


	node_stack_missile2 = 0.4130825, 0.7144908, -2.094282, 0, 0, 1, 0
	node_stack_missile3 = 0.4130825, 1.154978, -2.094282, 0, 0, 1, 0
	node_stack_missile14 = 0.4130825, 0.07371697, -2.094282, 0, 0, 1, 0
	node_stack_missile15 = 0.4130825, -0.3667703, -2.094282, 0, 0, 1, 0

	node_stack_missile5 = -0.4201337, 1.154978, -2.094282, 0, 0, 1, 0
	node_stack_missile7 = -0.4201337, 0.07371697, -2.094282, 0, 0, 1, 0
	node_stack_missile12 = -0.4201337, 0.7144908, -2.094282, 0, 0, 1, 0
	node_stack_missile13 = -0.4201337, -0.3667703, -2.094282, 0, 0, 1, 0

	node_stack_missile9 = -0.8658038, 0.07371697, -2.094282, 0, 0, 1, 0
	node_stack_missile10 = -0.8658038, 1.154978, -2.094282, 0, 0, 1, 0
	node_stack_missile11 = -0.8658038, 0.7144908, -2.094282, 0, 0, 1, 0
	node_stack_missile8 = -0.8658038, -0.3667703, -2.094282, 0, 0, 1, 0




	stackSymmetry = 1

	// --- editor parameters ---
	TechRequired = precisionEngineering
	entryCost = 2100
	cost = 950
	category = none
	bdacategory = Missile turrets
	subcategory = 0
	bulkheadProfiles = srf
	title = SADRA ABM Multi-Missile Launch Platform
	manufacturer = SADRA Military Technologies
	description = A turret capable of holding and firing up to 16 SADRA ABMs. It is capable of tracking, locking, and best of all, killing. 
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,0,1

	// --- standard part parameters ---
	mass = 0.50
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 60
	maxTemp = 3600


	MODULE
	{
		name = ModuleTurret

		turretID = 0

		pitchTransformName = pitchTransform
		yawTransformName = yawTransform

		pitchSpeedDPS = 360
		yawSpeedDPS = 360

		maxPitch = 90
		minPitch = -5

		yawRange = 360

		smoothRotation = true
		smoothMultiplier = 10

		audioPath = BDArmory/Sounds/hydraulicLoop
		maxAudioPitch = 0.42
		minAudioPitch = 0.15
	}

	MODULE
	{
		name = MissileTurret

		turretID = 0

		finalTransformName = pitchTransform
		deployAnimationName = deployAnimation
		deployAnimationSpeed = 1
		railLength = 6.85
		firePauseTime = 0.5
	}

	MODULE
	{
		name = BDALookConstraintUp

		targetName = pistonTransform
		rotatorsName = cylinderTransform
	}

	MODULE
	{
		name = BDALookConstraintUp

		targetName = cylinderTransform
		rotatorsName = pistonTransform
	}

MODULE
	{
        name = ModuleRadar

        // -- Section: General Configuration --
        radarName = SADRA ABM Network		// if left empty part.title is used, but advised to set this to a nice printable text
        rwrThreatType = 0				// IMPORTANT, please set correctly:
                                // 0 = SAM site radar
                                // 1 = Fighter radar (airborne)
                                // 2 = AWACS radar (airborne)
                                // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOURE DOING!
                                // 5 = Detection radar (ground/ship based)
                                // 6 = SONAR (ship/submarine based)
        rotationTransformName = scanRotation
	    turretID = 1					// if needed
        resourceDrain = 0.45				// change to higher values for more capable radars, e.g AESA

        // -- Section: Capabilities --
        omnidirectional = true				// false: boresight scan radar
        directionalFieldOfView = 360			// for omni and boresight
        boresightFOV = 10				// for boresight only
        scanRotationSpeed = 14400				// degress per second
        lockRotationSpeed = 14400				// only relevant if canLock
        lockRotationAngle = 4
        showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
        multiLockFOV = 360				// only relevant if canLock
        lockAttemptFOV = 360				// only relevant if canLock
        maxLocks = 16					//how many targets can be locked/tracked simultaneously. only relevant if canLock

        canScan = true					// scanning/detecting targets (volume search)
        canLock = true					// locking/tracking targets (fire control)
        canTrackWhileScan = true			// continue scanning while tracking a locked target
        canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])

        minSignalThreshold = 350				// DEPRECATED, NO LONGER USED! use detection float curve!
        minLockedSignalThreshold = 120			// DEPRECATED, NO LONGER USED! use locktrack float curve!

        radarGroundClutterFactor = 0.2			// how much is the radar efficiency reduced to by ground clutter/look-down?
                                // 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
                                // 1.0 = fully efficient (no difference between air & ground targets)
                                // default if unset: 0.25
                                // Ground targets, especially ships, already have a massively larger RCS than fighters, hence
                                // any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
                                // values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.

        radarDetectionCurve
        {
          // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
          // this defines both min/max range of the radar, and sensitivity/efficiency
          // it is recommended to define an "assured detection range", at which all craft are detected regardless
          //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
          //        key = distance	rcs
                    key = 5	0
				    key = 10	0	//between 0 and 2 km the min cross section is 0, thus assured detection of everything
                    key = 20	0    //for tracking locks the radar is highly sensitive
                    key = 50 0	//at twice the maxTargeting range the lockable rcs is quite large
					key = 100 0
					key = 200 0
					key = 500 0
        }

        radarLockTrackCurve
        {
            // same as detectionCurve, just for locking/tracking purpose
	    // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
	    //   ECM-jammers & chaff completely ineffective!!
            //      key = distance	rcs
                    key = 5	0
				    key = 10	0	//between 0 and 2 km the min cross section is 0, thus assured detection of everything
                    key = 20	0    //for tracking locks the radar is highly sensitive
                    key = 50 0	//at twice the maxTargeting range the lockable rcs is quite large
					key = 100 0
					key = 200 0
					key = 500 0
        }

}
