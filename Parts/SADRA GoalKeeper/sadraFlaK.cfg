PART
{
	// Kerbal Space Program - Part Config
	//
	//

	// --- general parameters ---
	name = sadraCIWSFlak
	module = Part
	author = BahamutoD

	// --- asset parameters ---
	mesh = model.mu
	rescaleFactor = 1.134


	// --- node definitions ---
	node_attach = 0.0, -0.7993, 0, 0, -1, 0, 0
	node_stack_bottom = 0.0, -0.7993, 0, 0, -1, 0, 2

	// --- editor parameters ---
	TechRequired = precisionEngineering
	entryCost = 2100
	cost = 950
	category = none
	bdacategory = Gun turrets
	subcategory = 0
	bulkheadProfiles = srf
	title = Sadra Flak CIWS
	manufacturer = SADRA
	description = A 7 barrel 30mm rotary cannon with full swivel range.  The 30mm high explosive rounds self detonate at the set distance, but this weapon does not feature automatic fuse timing. It has its own detection & tracking radar, though that is only effective at close range and does not replace a proper volumen serach radar.
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,0,0,1

	// --- standard part parameters ---
	mass = 4
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 50
	maxTemp = 3600

	stagingIcon = SOLID_BOOSTER



	MODULE
	{
		name = ModuleTurret
		turretID = 0

		pitchTransformName = gunPitch
		yawTransformName = gunYaw

		pitchSpeedDPS = 80
		yawSpeedDPS = 80

		maxPitch = 85
		minPitch = -15

		yawRange = 360

		smoothRotation = true
		smoothMultiplier = 10

		audioPath = BDArmory/Sounds/hydraulicLoop
		maxAudioPitch = 0.365
		minAudioPitch = 0.255
		maxVolume = 0.55
	}

	MODULE
	{
		name = ModuleWeapon
		turretID = 0

		fireTransformName = fireTransform

		hasDeployAnim = false

		hasFireAnimation = true
		fireAnimName = fireAnimation2
		spinDownAnimation = true

	roundsPerMinute = 1800
	maxDeviation = 0.02
	maxTargetingRange = 80000
	maxEffectiveDistance = 75000
	
	bulletMass = 6.55e-3
	bulletVelocity =  840
	ammoName = 90mmShells
	bulletType = 90mmBullet
	
	requestResourceAmount = 1
	cannonShellPower = 5
	cannonShellHeat = 10
	cannonShellRadius = 12
	hasRecoil = false
	onlyFireInRange = false
	bulletDrop = true
	weaponType = cannon	
	projectileColor = 255, 0, 255, 255
	tracerStartWidth = 0.7
	tracerEndWidth = 0.1
	tracerLength = 0
	maxHeat = 3600
	heatPerShot = 1
	heatLoss = 740
	
	airDetonation = true
	airDetonationTiming = true
	defaultAirDetonationRange = 2500
	maxAirDetonationRange = 12500
	shellScale = 4.0
	fireSoundPath = SM_Armory/Sounds/bb_fire
	overheatSoundPath = BDArmory/Parts/50CalTurret/sounds/turretOverheat
	oneShotSound = true
	showReloadMeter = true
	reloadAudioPath = SM_Armory/Sounds/reload
		fireSoundPath = SM_Armory/Sounds/dd_fire
		explModelPath = SM_Armory/FX/Flak1a
		explSoundPath = BDArmory/Sounds/subExplode
	
	engageAir = true
    engageMissile = false
	engageGround = true
	engageSLW = false
	}

	MODULE
	{
        name = ModuleRadar

        // -- Section: General Configuration --
        radarName = Goalkeeper Flak Radar		// if left empty part.title is used, but advised to set this to a nice printable text
        rwrThreatType = 0				// IMPORTANT, please set correctly:
                                // 0 = SAM site radar
                                // 1 = Fighter radar (airborne)
                                // 2 = AWACS radar (airborne)
                                // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOURE DOING!
                                // 5 = Detection radar (ground/ship based)
                                // 6 = SONAR (ship/submarine based)
        rotationTransformName = scanRotation
	    turretID = 1					// if needed
        resourceDrain = 0.01				// change to higher values for more capable radars, e.g AESA

        // -- Section: Capabilities --
        omnidirectional = true				// false: boresight scan radar
        directionalFieldOfView = 90			// for omni and boresight
        //boresightFOV = 10				// for boresight only
        scanRotationSpeed = 360				// degress per second
        lockRotationSpeed = 120				// only relevant if canLock
        lockRotationAngle = 4
        showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
        multiLockFOV = 360				// only relevant if canLock
        lockAttemptFOV = 90				// only relevant if canLock
        maxLocks = 10					//how many targets can be locked/tracked simultaneously. only relevant if canLock

        canScan = true					// scanning/detecting targets (volume search)
        canLock = true					// locking/tracking targets (fire control)
        canTrackWhileScan = true			// continue scanning while tracking a locked target
        canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])

        minSignalThreshold = 350				// DEPRECATED, NO LONGER USED! use detection float curve!
        minLockedSignalThreshold = 120			// DEPRECATED, NO LONGER USED! use locktrack float curve!

        radarGroundClutterFactor = 0.1			// how much is the radar efficiency reduced to by ground clutter/look-down?
                                // 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
                                // 1.0 = fully efficient (no difference between air & ground targets)
                                // default if unset: 0.25
                                // Ground targets, especially ships, already have a massively larger RCS than fighters, hence
                                // any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
                                // values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.

        radarDetectionCurve
        {
          // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
          // this defines both min/max range of the radar, and sensitivity/efficiency
          // it is recommended to define an "assured detection range", at which all craft are detected regardless
          //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
          //        key = distance	rcs
                    key = 0.0	0
                    key = 2	0	//between 0 and 2 km the min cross section is 0, thus assured detection of everything
                    key = 5	0   //max targeting range of the weapon is 5km, detectable rcs is quite small
                    key = 50 0	//at twice the maxTargeting range a rcs of min 20 m^2 can be detected
        }

        radarLockTrackCurve
        {
            // same as detectionCurve, just for locking/tracking purpose
	    // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
	    //   ECM-jammers & chaff completely ineffective!!
            //      key = distance	rcs
                    key = 0.0	0
				    key = 2	0	//between 0 and 2 km the min cross section is 0, thus assured detection of everything
                    key = 5	0    //for tracking locks the radar is highly sensitive
                    key = 50 0	//at twice the maxTargeting range the lockable rcs is quite large
        }

	}

	MODULE
	{
		name = ModuleTurret

		turretID = 1

		pitchTransformName = radarPitch
		yawTransformName = radarYaw

		pitchSpeedDPS = 120
		yawSpeedDPS = 120

		maxPitch = 80
		minPitch = -5

		yawRange = 360

		smoothRotation = true
		smoothMultiplier = 10
	}

RESOURCE
{
	name = 90mmShells
	amount = 40
	maxAmount = 4000
}

}
