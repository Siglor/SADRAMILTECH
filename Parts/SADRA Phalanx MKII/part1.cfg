PART
{
// Kerbal Space Program - Part Config
// 
// 

// --- general parameters ---
name = sadraPhalanxMKII
module = Part
author = Themorris (Base code) & Siglor

// --- asset parameters ---
mesh = model.mu
rescaleFactor = 1


// --- node definitions ---
node_attach = 0.0, -0.0, 0, 0, -1, 0, 0


// --- editor parameters ---
TechRequired = precisionEngineering
entryCost = 2100
cost = 950
category = none
subcategory = 0
title = SMT Tuned Phalanx MKII
manufacturer = SADRA Military Technologies
description = The Phalanx is a CIWS developed in the 70's and the predecessor to the SeaRAM. This enhanced version includes an increased rate of fire, longer lock & track ranges and incresed ammo capacity. Fires an astonishing 8500 rounds/minute of the caliber 20mm. It comes with it's own search and track radar.
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 0,1,0,0,1

// --- standard part parameters ---
mass = 0.1
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 60
maxTemp = 10000


MODULE
{
	name = ModuleTurret
	
	yawTransformName = yawTransform
	pitchTransformName = pitchTransform
	
	pitchSpeedDPS = 120
	yawSpeedDPS = 120
	
	minPitch = 0
	maxPitch = 90
	yawRange = 360
	
	smoothRotation = true
	smoothMultiplier = 10
}

MODULE
{
	name = ModuleWeapon
	
	shortName = SMT Phalanx MKII
	
	fireTransformName = fireTransform
	
	hasDeployAnim = false
	hasFireAnimation = true
	fireAnimName = pfire
	spinDownAnimation = true
	
	roundsPerMinute = 8750
	maxDeviation = 0.1
	maxEffectiveDistance = 500000
	maxTargetingRange = 500000
	
	bulletMass = 9.85e-5
	bulletVelocity = 2500
	
		ammoName = 30x173Ammo
		bulletType = 40MMHEPFBullet
		requestResourceAmount = 1
	
	
	hasRecoil = false
	onlyFireInRange = false
	bulletDrop = true
	
	weaponType = ballistic
	
	projectileColor = 107, 255, 0, 128 //RGBA 0-255 
	startColor = 107, 255, 0, 90
	tracerStartWidth = 0.16
	tracerEndWidth = 0.16
	tracerLength = 0

    airDetonation = true
	defaultDetonationRange = 5000
	maxAirDetonationRange = 75000
	
	oneShotWorldParticles = true
	
	maxHeat = 9600
	heatPerShot = 1
	heatLoss = 820
	
	fireSoundPath = BDArmory/Parts/20mmVulcan/sounds/VulcanCannon
	overheatSoundPath = BDArmory/Parts/20mmVulcan/sounds/VulcanEnd
	oneShotSound = false
	
         }
	
     MODULE
	 {
        name = ModuleRadar
        radarName = SMT CIWS Radar		// if left empty part.title is used, but advised to set this to a nice printable text
        rwrThreatType = 0				// IMPORTANT, please set correctly:
                                // 0 = SAM site radar
                                // 1 = Fighter radar (airborne)
                                // 2 = AWACS radar (airborne)
                                // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOURE DOING!
                                // 5 = Detection radar (ground/ship based)
                                // 6 = SONAR (ship/submarine based)
        rotationTransformName = scanRotation
	    turretID = 1					// if needed
        resourceDrain = 0.0.5				// change to higher values for more capable radars, e.g AESA

        // -- Section: Capabilities --
        omnidirectional = true				// false: boresight scan radar
        directionalFieldOfView = 90			// for omni and boresight
        boresightFOV = 360				// for boresight only
        scanRotationSpeed = 980				// degress per second
        lockRotationSpeed = 980				// only relevant if canLock
        lockRotationAngle = 360
        showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
        multiLockFOV = 360				// only relevant if canLock
        lockAttemptFOV = 360				// only relevant if canLock
        maxLocks = 10					//how many targets can be locked/tracked simultaneously. only relevant if canLock

        canScan = true					// scanning/detecting targets (volume search)
        canLock = true					// locking/tracking targets (fire control)
        canTrackWhileScan = true			// continue scanning while tracking a locked target
        canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])

        minSignalThreshold = 350				// DEPRECATED, NO LONGER USED! use detection float curve!
        minLockedSignalThreshold = 120			// DEPRECATED, NO LONGER USED! use locktrack float curve!

        radarGroundClutterFactor = 0.1			// how much is the radar efficiency reduced to by ground clutter/look-down?
                                // 0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
                                // 1.0 = fully efficient (no difference between air & ground targets)
                                // default if unset: 0.25
                                // Ground targets, especially ships, already have a massively larger RCS than fighters, hence
                                // any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
                                // values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.

         radarDetectionCurve
        {
          // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
          // this defines both min/max range of the radar, and sensitivity/efficiency
          // it is recommended to define an "assured detection range", at which all craft are detected regardless
          //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
          //        key = distance	rcs
                    key = 0.0	0
                    key = 2	0	//between 0 and 2 km the min cross section is 0, thus assured detection of everything
                    key = 5	0   //max targeting range of the weapon is 5km, detectable rcs is quite small
                    key = 20 0	//at twice the maxTargeting range a rcs of min 20 m^2 can be detected
        }

        radarLockTrackCurve
        {
            // same as detectionCurve, just for locking/tracking purpose
	    // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
	    //   ECM-jammers & chaff completely ineffective!!
            //      key = distance	rcs
                    key = 0.0	0
				    key = 2	0	//between 0 and 2 km the min cross section is 0, thus assured detection of everything
                    key = 5	0    //for tracking locks the radar is highly sensitive
                    key = 20 0	//at twice the maxTargeting range the lockable rcs is quite large
        }
	

	MODULE
	{
		name = BDACategoryModule
	}

	RESOURCE
	{
	 name = 30x173HEAmmo
	 amount = 25000
	 maxAmount = 50000
	}

}

